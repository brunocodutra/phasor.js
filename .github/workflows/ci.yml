name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  schedule:
  - cron:  '0 6 * * SAT'

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
        components: rustfmt
    - run: cargo +nightly fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
        components: clippy
    - run: cargo +nightly clippy --workspace -- -D warnings

  audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
    - run: cargo +nightly install cargo-audit
    - run: cargo +nightly audit

  doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: stable
    - run: cargo +stable doc --all-features --no-deps

  test:
    needs: [fmt, clippy, audit, doc]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
    - run: cargo +nightly test
      env: 
        PROPTEST_CASES: 4096
        PROPTEST_MAX_GLOBAL_REJECTS: 16384

  sanitize:
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [address, leak]
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
    - run: RUSTFLAGS="-Z sanitizer=${{ matrix.sanitizer }}" cargo +nightly test --tests --lib --all-features --target x86_64-unknown-linux-gnu
  
  coverage:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
    - run: cargo +nightly install cargo-tarpaulin
    - run: cargo +nightly tarpaulin --all-features --out Xml
    - run: bash <(curl -s https://codecov.io/bash) -C $GITHUB_SHA -B ${GITHUB_REF#refs/heads/} -Z
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  browser:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest, 
          windows-latest, 
          macOS-latest
        ]

        include:
        - os: 'ubuntu-latest'
          browser: 'firefox'

        - os: 'macOS-latest'
          browser: 'safari'

        - os: 'windows-latest'
          browser: 'chrome'

    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
    - uses: jetli/wasm-pack-action@v0.3.0
    - run: wasm-pack test --headless --${{ matrix.browser }}
    
  nodejs:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: nightly
    - uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - run: npm install
    - run: npm test
